{"version":3,"sources":["todolistwork/TimeClock.js","todolistwork/Weather.js","todolistwork/TodoTemplate.js","todolistwork/TodoInsert.js","todolistwork/TodoListItem.js","todolistwork/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TimeClock","React","time","setTime","date","Date","useInterval","toLocaleTimeString","style","marginBottom","marginRight","Weather","useState","Temperature","setTemperature","Place","setPlace","COORDS","getWeather","lat","log","fetch","then","response","json","temperature","main","temp","place","name","handleGeoSucces","position","latitude","coords","longitude","coordsObj","localStorage","setItem","JSON","stringify","saveCoords","handleGeoError","console","loadCoords","loadedCoords","getItem","navigator","geolocation","getCurrentPosition","parsedCoords","parse","marginLeft","TodoTemplate","children","className","fontSize","TodoInsert","onInsert","value","setValue","onChange","useCallback","e","target","onSubmit","preventDefault","margin","placeholder","type","TodoListItem","todo","onRemove","onToggle","id","text","checked","cn","onClick","TodoList","todos","map","App","setTodos","nextId","useRef","current","concat","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b778ba9f.chunk.js","sourcesContent":["import * as React from 'react';\nimport useInterval from 'use-interval';\nimport { FcAlarmClock } from 'react-icons/fc';\n\nconst TimeClock = () => {\n  const [time, setTime] = React.useState(' ?? : 00 : 00 ');\n\n  const date = new Date();\n\n  useInterval(() => {\n    setTime(date.toLocaleTimeString());\n  }, 1000);\n\n  return (\n    <div>\n      <FcAlarmClock style={{ marginBottom: '-15', marginRight: '10' }} />\n      {time}\n    </div>\n  );\n};\n\nexport default TimeClock;\n","import React, { useState } from 'react';\nimport { FaTemperatureLow } from 'react-icons/fa';\nimport { MdPlace } from 'react-icons/md';\n\nfunction Weather() {\n  const [Temperature, setTemperature] = useState('??');\n  const [Place, setPlace] = useState('Searching...');\n\n  const API_KEY = 'f8227a305be5ba70e440a6d93f7e90d0';\n  const COORDS = 'coords';\n\n  function getWeather(lat, log) {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${log}&appid=${API_KEY}&units=metric`,\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json) {\n        const temperature = json.main.temp;\n        const place = json.name;\n        setTemperature(temperature);\n        setPlace(place);\n      });\n  }\n\n  function saveCoords(coordsObj) {\n    localStorage.setItem(COORDS, JSON.stringify(coordsObj));\n  }\n\n  function handleGeoSucces(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    const coordsObj = {\n      latitude,\n      longitude,\n    };\n    saveCoords(coordsObj);\n    getWeather(latitude, longitude);\n  }\n\n  function handleGeoError() {\n    console.log('Cant access geo location');\n  }\n\n  function askForCoords() {\n    navigator.geolocation.getCurrentPosition(handleGeoSucces, handleGeoError);\n  }\n\n  function loadCoords() {\n    const loadedCoords = localStorage.getItem(COORDS);\n    if (loadedCoords === null) {\n      askForCoords();\n    } else {\n      const parsedCoords = JSON.parse(loadedCoords);\n      getWeather(parsedCoords.latitude, parsedCoords.longitude);\n    }\n  }\n\n  function init() {\n    loadCoords();\n  }\n\n  init();\n\n  return (\n    <div>\n      <FaTemperatureLow style={{ marginBottom: '-5' }} />\n      {Temperature}º{' '}\n      <MdPlace style={{ marginLeft: '15', marginBottom: '-5' }} /> {Place}\n    </div>\n  );\n}\n\nexport default Weather;\n","import React from 'react';\nimport { GoChecklist } from 'react-icons/go';\nimport './scssArea/TodoTemplate.scss';\n\nfunction TodoTemplate({ children }) {\n  return (\n    <div className=\"TodoTemplate\">\n      <div className=\"app-title\">\n        {' '}\n        <GoChecklist style={{ fontSize: '40', marginRight: '10' }} />\n        일정 관리\n      </div>\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n}\n\nexport default TodoTemplate;\n","import React, { useCallback, useState } from 'react';\nimport { MdAdd } from 'react-icons/md';\nimport { RiBallPenFill } from 'react-icons/ri';\nimport './scssArea/TodoInsert.scss';\n\nconst TodoInsert = ({ onInsert }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n\n  const onSubmit = useCallback(\n    (e) => {\n      onInsert(value);\n      setValue('');\n      e.preventDefault();\n    },\n    [onInsert, value],\n  );\n\n  return (\n    <form className=\"TodoInsert\" onSubmit={onSubmit}>\n      <RiBallPenFill style={{ fontSize: '40', margin: '5' }} />\n      <input\n        placeholder=\"할 일을 입력하세요\"\n        value={value}\n        onChange={onChange}\n      />\n      <button type=\"submit\">\n        <MdAdd />\n      </button>\n    </form>\n  );\n};\n\nexport default TodoInsert;\n","import React from 'react';\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdRemoveCircleOutline,\n} from 'react-icons/md';\nimport cn from 'classnames';\nimport './scssArea/TodoListItem.scss';\n\nconst TodoListItem = ({ todo, onRemove, onToggle }) => {\n  const { id, text, checked } = todo;\n\n  return (\n    <div className=\"TodoListItem\">\n      <div className={cn('checkbox', { checked })} onClick={() => onToggle(id)}>\n        {checked ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n        <div className=\"text\">{text}</div>\n      </div>\n      <div className=\"remove\" onClick={() => onRemove(id)}>\n        <MdRemoveCircleOutline />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\nimport TodoListItem from './TodoListItem';\nimport './scssArea/TodoList.scss';\n\nconst TodoList = ({ todos, onRemove, onToggle }) => {\n  return (\n    <div className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoListItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useCallback, useRef, useState } from 'react';\nimport './App.css';\nimport Clock from './todolistwork/TimeClock';\nimport Weather from './todolistwork/Weather';\nimport TodoTemplate from './todolistwork/TodoTemplate';\nimport TodoInsert from './todolistwork/TodoInsert';\nimport TodoList from './todolistwork/TodoList';\n\nconst App = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '일정 관리 앱 만들어 보기',\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    (text) => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter((todo) => todo.id !== id));\n    },\n    [todos],\n  );\n\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, checked: !todo.checked } : todo,\n        ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <div>\n      <section className=\"canterInformation\">\n        <div className=\"js-clock\">\n          <h1>\n            <Clock />\n          </h1>\n        </div>\n        <TodoTemplate>\n          <TodoInsert onInsert={onInsert} />\n          <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} />\n        </TodoTemplate>\n        <div className=\"js-weather\">\n          <Weather />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}